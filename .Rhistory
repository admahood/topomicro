dewpoint_c = dewpoint) |>
dplyr::mutate(id = top$Name,
dl_date = top$Download_Date,
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
lubridate::tz(bottom$dt) <- time_zone
bottom <- bottom |> dplyr::select(id,
index,
date_time = dt,
tz,
temperature_c,
humidity_pct,
dewpoint_c,
vpd_kPa)
}else{
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom <- readr::read_csv(filename) |>
janitor::clean_names() %>%
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
date_time = lubridate::parse_date_time(date_time, "%m/%d/%Y HM"),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
}
return(bottom)
}
bm_prep(filename)
devtools::load_all();devtools::document();devtools::check()
devtools::install()
library(devtools)
load_all()
filename <- 'data/C178DEB4_1677784470314_log.csv'
bm_prep(filename)
library(tidyverse)
bm_prep(filename)
if(stringr::str_detect(filename, "log")) bm_gen <- "old" else bm_gen <- 'new'
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
top
load_all()
bm_prep(filename)
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble()
readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric)
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge")
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(date_time = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(date_time)) |>
dplyr::rename(temperature_c = temperature,
humidity_pct = humidity,
dewpoint_c = dewpoint) |>
dplyr::mutate(id = top$name,
dl_date = top$download_date,
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
lice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(date_time = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(date_time))
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(date_time = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(date_time))
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge")
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric)
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, #sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge")
read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric)
bottom <- read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(date_time = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(date_time)) |>
dplyr::rename(temperature_c = temperature,
humidity_pct = humidity,
dewpoint_c = dewpoint) |>
dplyr::mutate(id = top$name,
dl_date = top$download_date,
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
load_all()
bm_prep(filename)
load_all()
bm_prep(filename)
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
load_all();document();check();install()
#' Read in and wrangle data from Blue Maestro sensors
#'
#' @param filename path to the csv file obtained from the blue maestro app.
#' @param time_zone time zone
#' @export
bm_prep <- function(filename, time_zone = "US/Mountain"){
requireNamespace("readr")
requireNamespace("tibble")
requireNamespace("dplyr")
requireNamespace('janitor')
requireNamespace("lubridate")
if(stringr::str_detect(filename, "log")) bm_gen <- "old" else bm_gen <- 'new'
if(bm_gen == 'old'){
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
bottom <- read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
# dplyr::select(date=date_time, temperature, humidity, dewpoint=dew_point) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
# dplyr::mutate_at(2:4, as.numeric) |>
tidyr::separate(date, sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(date_time = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(date_time)) |>
dplyr::rename(temperature_c = temperature,
humidity_pct = humidity,
dewpoint_c = dewpoint) |>
dplyr::mutate(id = top$name,
dl_date = top$download_date,
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
lubridate::tz(bottom$date_time) <- time_zone
bottom <- bottom |> dplyr::select(id,
index,
date_time,
tz,
ymd,
temperature_c,
humidity_pct,
dewpoint_c,
vpd_kPa)
}else{
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom <- readr::read_csv(filename) |>
janitor::clean_names() %>%
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
date_time = lubridate::parse_date_time(date_time, "%m/%d/%Y HM"),
ymd = lubridate::as_date(date_time),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
}
return(bottom)
}
load_all();document();install()
load_all()
rm(list = c("bm_prep"))
load_all()
check()
install()
filename <- 'data/ben2_F9C61C73_20241112.csv'
if(stringr::str_detect(filename, "log")) bm_gen <- "old" else bm_gen <- 'new'
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
path_split
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
filename_split
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
readr::read_csv(filename) |>
janitor::clean_names()
bottom <- readr::read_csv(filename) |>
janitor::clean_names() %>%
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = date_time,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
time_zone = "US/Mountain"
bottom <- readr::read_csv(filename) |>
janitor::clean_names() %>%
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = date_time,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
filename <- 'data/ben1_D70C9FAF_20250313.csv'
if(stringr::str_detect(filename, "log")) bm_gen <- "old" else bm_gen <- 'new'
if(bm_gen == 'old'){
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
bottom <- read.csv(filename) %>%
dplyr::slice(3:nrow(.)) |>
dplyr::select(index =1, date=2, temperature =3, humidity=4, dewpoint=5 ) |>
tibble::as_tibble() |>
dplyr::mutate_at(3:5, as.numeric) |>
tidyr::separate(date, sep = " ",
into = c("weekday", "month", "mday", "year", "hms", "tz", "tzv"),
extra = "merge") |>
dplyr::mutate(dt = lubridate::ymd_hms(paste(year, month, mday, hms, sep="-")),
ymd = lubridate::as_date(dt)) |>
dplyr::rename(temperature_c = temperature,
humidity_pct = humidity,
dewpoint_c = dewpoint) |>
dplyr::mutate(id = top$name,
dl_date = top$download_date,
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
lubridate::tz(bottom$dt) <- time_zone
bottom <- bottom |> dplyr::select(id,
index,
dt,
tz,
ymd,
temperature_c,
humidity_pct,
dewpoint_c,
vpd_kPa)
}else{
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom <- readr::read_csv(filename) |>
janitor::clean_names() %>%
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = date_time,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
}
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
readr::read_csv(filename) |>
janitor::clean_names()
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names()
bottom0
class(bottom0$date_time)
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
if(class(bottom0$date_time) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
bottom <-
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom0
if(class(bottom0$date_time) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
if(class(bottom0$dt) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
bottom <-
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom0
bottom <- bottom0
bottom <- bottom0 |>
dplyr::transmute(id = bm_name,
index = 1:nrow(.),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom <- bottom0 |>
dplyr::transmute(id = bm_name,
index = 1:nrow(bottom0),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
filename <- 'data/ben2_F9C61C73_20241112.csv'
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
if(class(bottom0$dt) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
bottom <- bottom0 |>
dplyr::transmute(id = bm_name,
index = 1:nrow(bottom0),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
filename
filename <- 'data/ben1_D70C9FAF_20250313.csv'
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
if(class(bottom0$dt) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
bottom <- bottom0 |>
dplyr::transmute(id = bm_name,
index = 1:nrow(bottom0),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
load_all(); document(); check()
install()
load_all()
bm_prep('data/ben1_D70C9FAF_20241112.csv')
filename <- 'data/ben1_D70C9FAF_20241112.csv'
time_zone = "US/Mountain"
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
if(class(bottom0$dt) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
class(bottom0$dt)
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
if(class(bottom0$dt) == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM") else next
if(class(bottom0$dt)[1] == "character") bottom0$dt <- lubridate::parse_date_time(bottom0$dt, "%m/%d/%Y HM")
bottom <- bottom0 |>
dplyr::transmute(id = bm_name,
index = 1:nrow(bottom0),
dt = dt,
ymd = lubridate::as_date(dt),
tz = time_zone,
temperature_c = (temperature - 32)*(5/9),
humidity_pct = humidity,
dewpoint_c = (dew_point - 32)*(5/9),
vpd_kPa = topomicro::vpd(rh = humidity_pct,
temp_c = temperature_c))
bottom
load_all() ; document(); install()
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
filename = 'data/C178DEB4_1677784470314_log.csv'
if(stringr::str_detect(filename, "log")) bm_gen <- "old" else bm_gen <- 'new'
top <- readr::read_csv(filename,n_max = 1) |>
janitor::clean_names()
top
filename <- 'data/ben1_D70C9FAF_20241112.csv'
path_split <- stringr::str_split(filename, pattern = "/", simplify = T)
filename_only <- path_split[1, length(path_split)]
filename_split <- stringr::str_split(stringr::str_remove_all(filename_only, '.csv'), pattern = '_', simplify = T)
bm_name <- filename_split[,1]
bm_id <- filename_split[,2]
bm_dl_date <- filename_split[,3]
bottom0 <- readr::read_csv(filename) |>
janitor::clean_names() |>
dplyr::rename(dt = date_time)
load_all();document();build();install()
